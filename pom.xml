<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Dutch Smart Meter Requirements (DSMR) Toolkit
  ~ Copyright (C) 2019-2019 Niels Basjes
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>nl.basjes.dsmr</groupId>
  <artifactId>dsmr-parser-parent</artifactId>
  <version>0.1-SNAPSHOT</version>

  <packaging>pom</packaging>
  <name>DSMR :</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!-- ============================================== -->
    <!-- ================ UDF Versions ================ -->
    <!-- ============================================== -->

    <!-- Apache Nifi -->
    <nifi.version>1.7.0</nifi.version>

    <!-- ============================================== -->

    <checkstyle-plugin.version>3.0.0</checkstyle-plugin.version>
    <checkstyle.version>8.20</checkstyle.version>
    <slf4j.version>1.7.26</slf4j.version>
    <rat.version>0.13</rat.version>
<!--    <jacoco.version>0.8.2</jacoco.version>-->
    <junit5.version>5.5.0</junit5.version>

    <!-- See http://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html-->
<!--    <jacoco.surefireArgLine/>-->
<!--    <argLine>@{jacoco.surefireArgLine} -Xmx2048m</argLine>-->

    <!--<sonar.language>java</sonar.language>-->
    <!--<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>-->
    <!--<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>-->
    <!--<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>-->

    <!--&lt;!&ndash; For some parts the code coverage has been disabled because it is &ndash;&gt;-->
    <!--&lt;!&ndash; either debugging or demonstration code. &ndash;&gt;-->
    <!--&lt;!&ndash; Sonar does not look at the Jacoco configs so we need to duplicate these &ndash;&gt;-->
    <!--&lt;!&ndash; rules here a second time. &ndash;&gt;-->
    <!--&lt;!&ndash; This is NASTY! &ndash;&gt;-->
    <!--<sonar.exclusions>-->
    <!--src/main/java/nl/basjes/parse/useragent/Version.*,-->
    <!--src/main/java/nl/basjes/parse/useragent/parser/**,-->
    <!--src/main/java/nl/basjes/parse/useragent/debug/**,-->
    <!--src/main/java/nl/basjes/parse/useragent/benchmarks/**,-->
    <!--src/main/java/nl/basjes/parse/useragent/servlet/**,-->
    <!--src/main/java/nl/basjes/parse/useragent/commandline/**,-->
    <!--src/main/java/nl/basjes/parse/useragent/drill/**,-->
    <!--</sonar.exclusions>-->

    <git-commit-id-plugin.version>2.2.3</git-commit-id-plugin.version>
    <version.copyright>Copyright (C) 2013-2019 Niels Basjes</version.copyright>
    <version.license>License Apache 2.0</version.license>
    <version.url>${project.url}</version.url>
  </properties>

  <modules>
    <module>devtools</module>
    <module>dsmr-parser</module>
    <module>dsmr-simulator</module>
    <module>stream-record-splitter</module>
    <module>udfs</module>
    <module>dsmr-to-influxdb</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
<!--    <pluginManagement>-->
<!--      <plugins>-->
<!--        <plugin>-->
<!--          <groupId>org.apache.maven.plugins</groupId>-->
<!--          <artifactId>maven-checkstyle-plugin</artifactId>-->
<!--          <version>${checkstyle-plugin.version}</version>-->
<!--          <dependencies>-->
<!--            <dependency>-->
<!--              <groupId>nl.basjes.iot</groupId>-->
<!--              <artifactId>devtools</artifactId>-->
<!--              <version>${project.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--              <groupId>com.puppycrawl.tools</groupId>-->
<!--              <artifactId>checkstyle</artifactId>-->
<!--              <version>${checkstyle.version}</version>-->
<!--            </dependency>-->
<!--          </dependencies>-->
<!--          <configuration>-->
<!--            <consoleOutput>true</consoleOutput>-->
<!--            <configLocation>checkstyle/checkstyle.xml</configLocation>-->
<!--            <suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>-->
<!--            <includeTestSourceDirectory>true</includeTestSourceDirectory>-->
<!--          </configuration>-->
<!--          &lt;!&ndash; Runs by default in the verify phase  (mvn verify or later in the build cycle)-->
<!--               the 'check' goal will fail the build if it does not pass.  "mvn checkstyle:check"-->
<!--               will do this alone, or "mvn checkstyle:checkstyle" will report but not break  &ndash;&gt;-->
<!--          <executions>-->
<!--            <execution>-->
<!--              <id>checkstyle-check</id>-->
<!--              <phase>test</phase>-->
<!--              <goals>-->
<!--                <goal>check</goal>-->
<!--              </goals>-->
<!--            </execution>-->
<!--          </executions>-->
<!--        </plugin>-->

<!--        &lt;!&ndash; Coverage analysis for tests &ndash;&gt;-->
<!--        <plugin>-->
<!--          <groupId>org.jacoco</groupId>-->
<!--          <artifactId>jacoco-maven-plugin</artifactId>-->
<!--          <version>${jacoco.version}</version>-->
<!--          <executions>-->
<!--            &lt;!&ndash;-->
<!--                Prepares the property pointing to the JaCoCo runtime agent which-->
<!--                is passed as VM argument when Maven the Surefire plugin is executed.-->
<!--            &ndash;&gt;-->
<!--            <execution>-->
<!--              <id>pre-unit-test</id>-->
<!--              <goals>-->
<!--                <goal>prepare-agent</goal>-->
<!--              </goals>-->
<!--              <configuration>-->
<!--                &lt;!&ndash;-->
<!--                    Sets the name of the property containing the settings-->
<!--                    for JaCoCo runtime agent.-->
<!--                &ndash;&gt;-->
<!--                <propertyName>jacoco.surefireArgLine</propertyName>-->
<!--              </configuration>-->
<!--            </execution>-->
<!--            &lt;!&ndash;-->
<!--                Ensures that the code coverage report for unit tests is created after-->
<!--                unit tests have been run.-->
<!--            &ndash;&gt;-->
<!--            <execution>-->
<!--              <id>post-unit-test</id>-->
<!--              <phase>test</phase>-->
<!--              <goals>-->
<!--                <goal>report</goal>-->
<!--              </goals>-->
<!--            </execution>-->
<!--          </executions>-->
<!--        </plugin>-->

<!--        <plugin>-->
<!--          <groupId>org.sonarsource.scanner.maven</groupId>-->
<!--          <artifactId>sonar-maven-plugin</artifactId>-->
<!--          <version>3.5.0.1254</version>-->
<!--        </plugin>-->

<!--      </plugins>-->
<!--    </pluginManagement>-->

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-checkstyle-plugin</artifactId>-->
<!--      </plugin>-->

<!--      <plugin>-->
<!--        <groupId>org.jacoco</groupId>-->
<!--        <artifactId>jacoco-maven-plugin</artifactId>-->
<!--      </plugin>-->
    </plugins>
  </build>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Niels Basjes</name>
      <email>niels@basjes.nl</email>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Amsterdam</timezone>
    </developer>
  </developers>

  <scm>
    <url>https://dsmr.basjes.nl</url>
    <connection>scm:git:https://github.com/nielsbasjes/dsmr-tools.git</connection>
    <developerConnection>scm:git:.</developerConnection>
  </scm>

</project>
